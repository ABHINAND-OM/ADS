#include<stdio.h>
#include<stdlib.h>
void enqueue();
void dequeue();
void display();
int rear=-1;
int front=-1;
int queue[100],n,ch;
int main()
{
printf("enter the limit of the queue  :\n");
scanf("%d",&n);
do
  {
    printf("\n\t +++CIRCULAR QUEUE OPERATIONS+++");
    printf("\n\t 1-enqueue\n\t 2-dequeue\n\t 3-display\n\t 4-exit");
    printf("\n\t enter your choice :\n");
    scanf("%d",&ch);
    switch(ch)
          {
            case 1:enqueue();
                 break;
            case 2:dequeue();
                 break;
            case 3:display();
                 break;
            case 4:exit(0);
                 break;
            default:printf("invalid choice!!!");
            
          }
          
  }
  while(ch<4);
}
void enqueue()
{
int item;
if(rear==n-1)
   {
    printf("\n the queue is full");
    
   }
else
   {
   if(front == -1)
     {
      front =0;
     }
    printf("\ninsert the element in queue  :");
    scanf("%d",&item);
    rear=(rear+1)%n;
    queue[rear]=item;
    printf("\n ----element inserted successfuly----");
    }
}

void dequeue()
{
if(front==-1 || front>rear)
  {
   printf("\n the queue is empty ");
  }
else
  {
   printf("element deleted is %d\t",queue[front]);

   
  
  if(front==rear)
    {
     printf("only one element is left and it deleted");
     front=-1;
     rear=-1;
     
    }
  else
  {
   front=(front+1)%n;
   printf("\n element is succesfully deleted");
  }
   
  }
 
 
}

void display()
{
int i;
if(front==-1 || front>rear)
   {
    printf("\n queue is empty");
    
   }
else
   {
    printf("\n the element in the queue is :");
    for(i=front;i<=rear;i++)
       {
        printf("%d\t",queue[i]);
        
       }
   }
  
   
}
     
